paraview.simple.MaskPoints
==========================

.. currentmodule:: paraview.simple

.. autofunction:: MaskPoints

Data Descriptors
----------------


   
   GenerateVertices
       This property specifies whether to generate vertex cells
       as the topography of the output. If set to 1, the geometry (vertices)
       will be displayed in the rendering window; otherwise no geometry will
       be displayed.
   
   Input
       This property specifies the input to the Mask Points
       filter.
   
   MaximumNumberofPoints
       The value of this property indicates the maximum number
       of points in the output dataset.
   
   Offset
       The value of this property indicates the starting point
       id in the ordered list of input points from which to start
       masking.
   
   OnRatio
       The value of this property specifies that every
       OnStride-th points will be retained in the output when not using Random
       (the skip or stride size for point ids). (For example, if the on ratio
       is 3, then the output will contain every 3rd point, up to the the
       maximum number of points.)
   
   ProportionallyDistributeMaximumNumberOfPoints
       When this is off, the maximum number of points is taken
       per processor when running in parallel (total number of points = number
       of processors \* maximum number of points). When this is on, the maximum
       number of points is proportionally distributed across processors
       depending on the number of points per processor
       ("total number of points" is the same as "maximum number of points"
        maximum number of points per processor = number of points on a processor
        \* maximum number of points / total number of points across all processors
       ).
   
   RandomSampling
       If the value of this property is set to true, then the
       points in the output will be randomly selected from the input in
       various ways set by Random Mode; otherwise this filter will subsample
       point ids regularly.
   
   RandomSamplingMode
       Randomized Id Strides picks points with random id
       increments starting at Offset (the output probably isn't a
       statistically random sample). Random Sampling generates a statistically
       random sample of the input, ignoring Offset (fast - O(sample size)).
       Spatially Stratified Random Sampling is a variant of random sampling
       that splits the points into equal sized spatial strata before randomly
       sampling (slow - O(N log N)).
   
   SingleVertexPerCell
       Tell filter to only generate one vertex per cell instead
       of multiple vertices in one cell.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`