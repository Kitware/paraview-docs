paraview.simple.Delaunay3D
==========================

.. currentmodule:: paraview.simple

.. autofunction:: Delaunay3D

Data Descriptors
----------------


   
   Alpha
       This property specifies the alpha (or distance) value to
       control the output of this filter. For a non-zero alpha value, only
       edges, faces, or tetra contained within the circumsphere (of radius
       alpha) will be output. Otherwise, only tetrahedra will be
       output.
   
   AlphaLines
       This boolean controls whether lines which satisfy the
       alpha criterion output when alpha is non-zero.
   
   AlphaTets
       This boolean controls whether tetrahedrons which satisfy
       the alpha criterion output when alpha is non-zero.
   
   AlphaTris
       This boolean controls whether triangles which satisfy
       the alpha criterion output when alpha is non-zero.
   
   AlphaVerts
       This boolean controls whether vertices which satisfy the
       alpha criterion are output when alpha is non-zero.
   
   BoundingTriangulation
       This boolean controls whether bounding triangulation
       points (and associated triangles) are included in the output. (These
       are introduced as an initial triangulation to begin the triangulation
       process. This feature is nice for debugging output.)
   
   Input
       This property specifies the input dataset to the
       Delaunay 3D filter.
   
   Offset
       This property specifies a multiplier to control the size
       of the initial, bounding Delaunay triangulation.
   
   Tolerance
       This property specifies a tolerance to control
       discarding of closely spaced points. This tolerance is specified as a
       fraction of the diagonal length of the bounding box of the
       points.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`