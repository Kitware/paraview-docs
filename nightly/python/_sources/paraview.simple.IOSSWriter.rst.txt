paraview.simple.IOSSWriter
==========================

.. currentmodule:: paraview.simple

.. autofunction:: IOSSWriter

Data Descriptors
----------------


   
   Assembly
       Select which assembly is used when specify selectors to choose blocks to write.
   
   ChooseArraysToWrite
       Property to control whether to choose arrays to write.
   
   ChoosetheoutputblocksarraysfortheExodusEntityType
       This property allows the user to choose the output blocks/arrays for the selected Exodus Entity Type.
   
   DisplacementMagnitude
       If input dataset has displacements pre-applied, setting the displacement magnitude to non-zero ensures that the point coordinates in the dataset are correctly transformed using the displacement field array, if present.
   
   EdgeBlockArrays
       Select the edge block arrays to pass through.
   
   EdgeBlockSelectors
       Specify the edge block selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   EdgeSetArrays
       Select the edge set arrays to pass through.
   
   EdgeSetSelectors
       Specify the edge sets selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   ElementBlockArrays
       Select the element block arrays to pass through.
   
   ElementBlockSelectors
       Specify the element block selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   ElementSetArrays
       Select the element set arrays to pass through.
   
   ElementSetSelectors
       Specify the element sets selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   FaceBlockArrays
       Select the face block arrays to pass through.
   
   FaceBlockSelectors
       Specify the face block selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   FaceSetArrays
       Select the face set arrays to pass through.
   
   FaceSetSelectors
       Specify the face sets selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   FileName
       The name of the file to be written.
   
   Input
       The input filter/source whose output dataset is to written to the file.
   
   NodeBlockArrays
       Select the node block arrays to pass through.
   
   NodeSetArrays
       Select the node set arrays to pass through.
   
   NodeSetSelectors
       Specify the node sets selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   OffsetGlobalIds
       Exodus wants global ids to start with 1, while VTK generally produces global ids starting with 0. Set this to true (default false), if the global ids are generated by VTK and hence start with 0. When writing to the output file, they will be offset by 1 to ensure the ids are valid exodus ids.
   
   PreserveOriginalIds
       If input is transformed, e.g. through clipping, new element blocks may be created. This flag can be used to indicate whether to preserve the original ids from blocks or not.
   
   RemoveGhosts
       Property to control whether to remove ghost cells from the input or not.
   
   SideSetArrays
       Select the side set arrays to pass through.
   
   SideSetSelectors
       Specify the side sets selectors for the data assembly chosen using \*\*Assembly\*\* to choose the blocks to write from the input dataset.
   
   TimeStepRange
       To limit writing a subset of the timesteps, specify a valid range. You may also use \*\*FileStride\*\* to step over timesteps in this range.
   
   TimeStepStride
       Specify the stride to use when writing a subset of timesteps as dictated by the \*\*TimeStepRange\*\*.
   
   WriteQAAndInformationRecords
       When checked, the writer will write quality assurance and information records, if available.
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`