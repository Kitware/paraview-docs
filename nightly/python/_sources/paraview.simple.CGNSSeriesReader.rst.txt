paraview.simple.CGNSSeriesReader
================================

.. currentmodule:: paraview.simple

.. autofunction:: CGNSSeriesReader

Data Descriptors
----------------


   
   Blocks
       Select the blocks (i.e. zones, bc-patches etc)
       to be loaded from the dataset. \*\*Hierarchy\*\* reflects the
       hierarchy as present in the CGNS file. \*\*Families\*\* allows selecting of blocks
       using their family names. \*\*Grids\*\* and \*\*Patches\*\* allows loading grids or
       bc-patches for specific zones.
   
   CacheConnectivity
       Toggle whether to cache mesh connectivity for unstructured meshes.
       If unchecked, mesh connectivity are read at every time step.
       If checked, mesh connectivity are store in the cache. When loading a new iteration,
       the mesh connectivity will be retrieved from the cache.
       Changing this property may impact the loading performance.
   
   CacheMesh
       Toggle whether to cache mesh points.
       If unchecked, mesh coordinates are read at every time step.
       If checked, mesh coordinates are store in the cache. When loading a new iteration,
       the mesh coordinates will be retrieved from the cache.
       Changing this property may impact the loading performance.
   
   CellArrayStatus
       This property contains a list of the cell-centered arrays to read.
   
   CreateEachSolutionAsBlock
       Toggle whether to load each Solution node under a zone separately.
       This is intended only for debug purpose
   
   DoublePrecisionMesh
       Toggle whether to load mesh with double precision values or with floating values
       If unchecked, mesh coordinates are store on 32 bit so it has lower memory footprint.
       If checked, mesh coordinates are store on 64 bit so it has higher memory requirements.
       Changing this property may impact the loading performance
       since if the cgns file mesh precision and the wanted precision are different
       conversion will occur
   
   FileNames
       The list of files to be read by the reader. If more than 1 file is
       specified, the reader will switch to file series mode in which it will
       pretend that it can support time and provide 1 file per time step.
   
   IgnoreFlowSolutionPointers
       When checked, the reader will simply ignore \*\*FlowSolutionPointers\*\* in the
       CGNS file since they are either incomplete or invalid. To locate unsteady
       solution, the \*\*UseUnsteadyPattern\*\* option should then be activated.
   
   IgnoreReaderTime
       When reading a file-series, if each file in the series does not provide correct time
       information, the reader will not be able to animate through the file series correctly.
       Check this to ignore the time information provided by each file.
   
   PointArrayStatus
       This property contains a list of the point-centered arrays to read.
   
   TimestepValues
       Available time step values.
   
   UseUnsteadyPattern
       When checked, the reader will use pattern matching to detect FlowSolution_t
       that are relevant for the current timestep. It rely on \*\*FlowSolution_t\*\*
       nodes being labelled as \*\*...AtStep[tsindex]\*\* to locate
       solution nodes for a specific timestep. Note, \*\*\*tsindex\*\*\* starts with 1.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`