paraview.simple.Tube
====================

.. currentmodule:: paraview.simple

.. autofunction:: Tube

Data Descriptors
----------------


   
   Capping
       If this property is set to 1, endcaps will be drawn on
       the tube. Otherwise the ends of the tube will be open.
   
   DefaultNormal
       The value of this property specifies the normal to use
       when the UseDefaultNormal property is set to 1 or the input contains no
       vector array (SelectInputVectors property).
   
   Input
       This property specifies the input to the Tube
       filter.
   
   NumberofSides
       The value of this property indicates the number of faces
       around the circumference of the tube.
   
   Radius
       The value of this property sets the radius of the tube.
       If the radius is varying (VaryRadius property), then this value is the
       minimum radius.
   
   RadiusFactor
       If varying the radius (VaryRadius property), the
       property sets the maximum tube radius in terms of a multiple of the
       minimum radius. If not varying the radius, this value has no
       effect.
   
   Scalars
       This property indicates the name of the scalar array on
       which to operate. The indicated array may be used for scaling the
       tubes. (See the VaryRadius property.)
   
   UseDefaultNormal
       If this property is set to 0, and the input contains no
       vector array, then default ribbon normals will be generated
       (DefaultNormal property); if a vector array has been set
       (SelectInputVectors property), the ribbon normals will be set from the
       specified array. If this property is set to 1, the default normal
       (DefaultNormal property) will be used, regardless of whether the
       SelectInputVectors property has been set.
   
   VaryRadius
       The property determines whether/how to vary the radius
       of the tube. If varying by scalar (1), the tube radius is based on the
       point-based scalar values in the dataset. If it is varied by vector,
       the vector magnitude is used in varying the radius.
   
   Vectors
       This property indicates the name of the vector array on
       which to operate. The indicated array may be used for scaling and/or
       orienting the tubes. (See the VaryRadius property.)
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`