paraview.simple.XMLTableWriter
==============================

.. currentmodule:: paraview.simple

.. autofunction:: XMLTableWriter

Data Descriptors
----------------


   
   CellDataArrays
       Select the cell data arrays to pass through
   
   ChooseArraysToWrite
       Explicitly choose which arrays to write.
   
   CompressionLevel
       A compression performance parameter from 1 (faster/larger
       compressed filesize) to 9 (slower/smaller compressed filesize).
   
   CompressorType
       The compression algorithm used to compress binary data
       (appended mode only). None offers fastest write, LZ4 offers fastest
       compressed write, ZLib offers balanced performance, LZMA offers
       smallest compressed filesize.
   
   DataMode
       The mode uses for writing the file's data i.e. ascii,
       binary, appended binary.
   
   EdgeDataArrays
       Select the edge data arrays to pass through
   
   EncodeAppendedData
       When EncodeAppendedData is turned ON, the writer uses
       base64 encoding when writing binary data (only if appended mode is
       selected).
   
   FieldDataArrays
       Select the field data arrays to pass through
   
   FileName
       The name of the file to be written.
   
   Filenamesuffix
       The suffix to append to the file name when writing files at different timesteps.
       File extensions such as .vtk should be excluded.
       The `%` format specifiers are used. For example, _%d will write files as FileName_0,
       FileName_1, FileName_2, etc., and _%.3d will write files as FileName_000,
       FileName_001, FileName_002 etc.
   
   Firsttimestep
       Sets the lower bound for timesteps to write.
   
   Input
       The input filter/source whose output dataset is to
       written to the file.
   
   Lasttimestep
       Sets the upper bound for timesteps to write. If
       less than min, the last time step is used.
   
   PointDataArrays
       Select the point data arrays to pass through
   
   RowDataArrays
       Select the row data arrays to pass through
   
   Timestepstride
       Sets the stride to go through the time steps.
   
   VertexDataArrays
       Select the vertex data arrays to pass through
   
   Writetimestepsasfileseries
       When WriteTimeSteps is OFF, the writer
       writes only the current timestep. Otherwise it is called once
       for each time step within the min and max range. If those are
       not set, the writer is called for all time steps available in
       its input.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`