paraview.simple.LANLFOFSODHaloFinder
====================================

.. currentmodule:: paraview.simple

.. autofunction:: LANLFOFSODHaloFinder

Data Descriptors
----------------


   
   Boxsize
       The box side length used to wrap particles around if they exceed rL
       (or less than 0) in any dimension (only positive positions are allowed
       in the input, or they are wrapped around).
   
   Centerfinder
       Method used for computing the halo center.
       WARNING: Using MBP or MCP can be very slow.
   
   FOFmassthreshold
       Minimum FOF mass to calculate an SOD halo.
   
   FOFparticlethreshold
       Minimum number of particles (threshold) needed before a group is called
       a friends-of-friends (FOF) halo.
   
   FOFsizethreshold
       Minimum FOF halo size to calculate an SOD halo.
   
   InitialSODmass
       The initial SOD mass.
   
   Input
       This property specifies the input of the filter.
   
   Linkinglength
       Linking length measured in units of interparticle spacing and is
       dimensionless.  Used to link particles into halos for the
       friends-of-friends (FOF) algorithm.
   
   Maximumradiusfactor
       Maximum radius factor for SOD finding.
   
   Minimumradiusfactor
       Minimum radius factor for SOD finding.
   
   Numberofbins
       Number of bins for SOD finding.
   
   Overlap
       The space (in rL units) to extend processor particle ownership for ghost
       particles/cells.  Needed for correct halo calculation when halos cross
       processor boundaries in parallel computation.
   
   Seedparticles
       Number of seeded particles in one dimension.  Therefore, total simulation
       particles is np^3 (cubed).
   
   SphereOverdensityHalosSOD
       If checked, spherical overdensity (SOD) halos will be calculated in
       addition to friends-of-friends (FOF) halos.
   
   rho_c
       Specify the scale factor for rho_c (critical density) for SOD
       halo finding.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`