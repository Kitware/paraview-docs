paraview.simple.ComputeSides
============================

.. currentmodule:: paraview.simple

.. autofunction:: ComputeSides

Data Descriptors
----------------


   
   Input
       The input.
   
   OmitSidesForRenderableInputs
       Set this property to true to avoid generating sides for input cells or sides that can be rendered as they are. If false, then sides will be output even for cells/sides that are surfaces or edges. As an example, if an input has hexahedra and triangle cells, this filter will generate quadrilateral sides (for the hexahedra) and edge sides (for the triangles) if OmitSidesForRenderableInputs is true, but only quadrilateral sides (for the hexahedra) if OmitSidesForRenderableInputs is false. Note that this is independent of whether some input cells are preserved or not.
   
   PreserveRenderableInputs
       Set this property to true to include the original input cells in the output if they are of dimension 2 or lower (i.e., surface, edges, or vertices). If false, then only the computed sides will be output. As an example, if an input has hexahedra and triangle cells, this filter will output quadrilateral sides and triangle cells when PreserveRenderableInputs is true and only quadrilateral sides when PreserveRenderableInputs is false.
   
   SidestoInclude
       Set this property to true to include the original input cells in the output if they are of dimension 2 or lower (i.e., surface, edges, or vertices). If false, then only the computed sides will be output. As an example, if an input has hexahedra and triangle cells, this filter will output quadrilateral sides and triangle cells when PreserveRenderableInputs is true and only quadrilateral sides when PreserveRenderableInputs is false.
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`