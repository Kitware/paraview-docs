paraview.simple.Clean
=====================

.. currentmodule:: paraview.simple

.. autofunction:: Clean

Data Descriptors
----------------


   
   AbsoluteTolerance
       If merging nearby points (see PointMerging property) and
       using absolute tolerance (see ToleranceIsAbsolute property), this
       property specifies the tolerance for performing merging in the spatial
       units of the input data set.
   
   ConvertLinesToPoints
       If this property is set to 1, degenerate lines (a "line"
       whose endpoints are at the same spatial location) will be converted to
       points.
   
   ConvertPolysToLines
       If this property is set to 1, degenerate polygons (a
       "polygon" with only two distinct point coordinates) will be converted
       to lines.
   
   ConvertStripsToPolys
       If this property is set to 1, degenerate triangle strips
       (a triangle "strip" containing only one triangle) will be converted to
       triangles.
   
   Input
       Set the input to the Clean filter.
   
   PieceInvariant
       If this property is set to 1, the whole data set will be
       processed at once so that cleaning the data set always produces the
       same results. If it is set to 0, the data set can be processed one
       piece at a time, so it is not necessary for the entire data set to fit
       into memory; however the results are not guaranteed to be the same as
       they would be if the Piece invariant option was on. Setting this option
       to 0 may produce seams in the output dataset when ParaView is run in
       parallel.
   
   PointMerging
       If this property is set to 1, then points will be merged
       if they are within the specified Tolerance or AbsoluteTolerance (see
       the Tolerance and AbsoluteTolerance properties), depending on the value
       of the ToleranceIsAbsolute property. (See the ToleranceIsAbsolute
       property.) If this property is set to 0, points will not be
       merged.
   
   Tolerance
       If merging nearby points (see PointMerging property) and
       not using absolute tolerance (see ToleranceIsAbsolute property), this
       property specifies the tolerance for performing merging as a fraction
       of the length of the diagonal of the bounding box of the input data
       set.
   
   ToleranceIsAbsolute
       This property determines whether to use absolute or
       relative (a percentage of the bounding box) tolerance when performing
       point merging.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`