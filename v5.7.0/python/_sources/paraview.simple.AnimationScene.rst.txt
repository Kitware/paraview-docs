paraview.simple.AnimationScene
==============================

.. currentmodule:: paraview.simple

.. autofunction:: AnimationScene

Data Descriptors
----------------


   
   AnimationTime
       Set the current animation time.
   
   Cues
       Add cues to this scene.
   
   Duration
       Set the duration for playing the animation in
       seconds.
   
   EndTime
       Set the end time for the animation
       scene.
   
   FramesPerTimestep
       The number of frames per timestep.
   
   GoToFirst
   
   GoToLast
   
   GoToNext
   
   GoToPrevious
   
   LockEndTime
       When set the EndTime will not be changed when the data
       time steps change.
   
   LockStartTime
       When set the StartTime will not be changed when the data
       time steps change.
   
   Loop
       Set to true to play the animation in a
       loop.
   
   NumberOfFrames
       Set the number of frames in which to play the
       animation.
   
   Play
   
   PlayMode
   
   StartTime
       Set the start time for the animation
       scene.
   
   Stop
   
   TimeKeeper
       Set the time keeper. Time keeper is used to obtain the
       information about timesteps. This is required to play animation in
       "Snap To Timesteps" mode.
   
   ViewModules
       Add views to this scene. These are all the views that
       need to be updated when playing the animation.
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`