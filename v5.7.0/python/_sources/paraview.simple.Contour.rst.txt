paraview.simple.Contour
=======================

.. currentmodule:: paraview.simple

.. autofunction:: Contour

Data Descriptors
----------------


   
   ComputeGradients
       If this property is set to 1, a scalar array containing
       a gradient value at each point in the isosurface or isoline will be
       created by this filter; otherwise an array of gradients will not be
       computed. This operation is fairly expensive both in terms of
       computation time and memory required, so if the output dataset produced
       by the contour filter will be processed by filters that modify the
       dataset's topology or geometry, it may be wise to set the value of this
       property to 0. Not that if ComputeNormals is set to 1, then gradients
       will have to be calculated, but they will only be stored in the output
       dataset if ComputeGradients is also set to 1.
   
   ComputeNormals
       If this property is set to 1, a scalar array containing
       a normal value at each point in the isosurface or isoline will be
       created by the contour filter; otherwise an array of normals will not
       be computed. This operation is fairly expensive both in terms of
       computation time and memory required, so if the output dataset produced
       by the contour filter will be processed by filters that modify the
       dataset's topology or geometry, it may be wise to set the value of this
       property to 0. Select whether to compute normals.
   
   ComputeScalars
       If this property is set to 1, an array of scalars
       (containing the contour value) will be added to the output dataset. If
       set to 0, the output will not contain this array.
   
   ContourBy
       This property specifies the name of the scalar array
       from which the contour filter will compute isolines and/or
       isosurfaces.
   
   GenerateTriangles
       This parameter controls whether to produce triangles in the output.
       Warning: Many filters do not properly handle non-triangular polygons.
   
   Input
       This property specifies the input dataset to be used by
       the contour filter.
   
   Isosurfaces
       This property specifies the values at which to compute
       isosurfaces/isolines and also the number of such
       values.
   
   OutputPointsPrecision
       Select the output precision of the coordinates. \*\*Single\*\* sets the
       output to single-precision floating-point (i.e., float), \*\*Double\*\*
       sets it to double-precision floating-point (i.e., double), and
       \*\*Default\*\* sets it to the same precision as the precision of the
       points in the input. Defaults to \*\*\*Single\*\*\*.
   
   PointMergeMethod
       This property specifies an incremental point locator for
       merging duplicate / coincident points.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`