paraview.simple.Histogram2D
===========================

.. currentmodule:: paraview.simple

.. autofunction:: Histogram2D

Data Descriptors
----------------


   
   ComponentforXAxisarray
       The value of this property specifies the array component
       from which the histogram should be computed.
   
   ComponentforYAxisarray
       The value of this property specifies the array component
       from which the histogram should be computed.
   
   CustomBinRangesforXAxis
       Set custom bin ranges to use. These are used only when
       UseCustomBinRanges is set to true.
   
   CustomBinRangesforYAxis
       Set custom bin ranges to use. These are used only when
       UseCustomBinRanges is set to true.
   
   HistogramBoundsfromInput
       When set to true, the input scalar ranges will be used to compute the histogram origin and spacing. By default, set to false.
   
   HistogramOrigin
       The origin of the output histogram image. These are used only when
       UseInputRangesForOutputBounds is set to false.
   
   HistogramSpacing
       The pixel spacing of the output histogram image. These are used only when
       UseInputRangesForOutputBounds is set to false.
   
   Input
       This property specifies the input to the Histogram filter.
   
   InputArrayforXAxis
       This property indicates the name of the array from which
       to compute the histogram.
   
   InputArrayforYAxis
       This property indicates the name of the array from which
       to compute the histogram.
   
   NumberofBins
   
   UseCustomBinRangesforXAxis
       When set to true, custom bin ranges will be used instead of using the full range for the
       selected array for X axis. By default, set to false.
   
   UseCustomBinRangesforYAxis
       When set to true, custom bin ranges will be used instead of using the full range for the
       selected array for X axis. By default, set to false.
   
   UseGradientasYAxisArray
       If this property is on, the gradient of the input scalar array will be used for the Y
       axis of the 2D histogram.
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`