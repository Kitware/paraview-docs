paraview.simple.MaterialInterfaceFilter
=======================================

.. currentmodule:: paraview.simple

.. autofunction:: MaterialInterfaceFilter

Data Descriptors
----------------


   
   ClipType
       This property sets the type of clip geometry, and
       associated parameters.
   
   ComputeOBB
       Compute Object Oriented Bounding boxes (OBB). When
       active the result of this computation is copied into the statistics
       output. In the case that the filter is built in its validation mode,
       the OBB's are rendered.
   
   Computemassweightedaverageover
       For arrays selected a mass weighted average is computed.
       These arrays are also copied into fragment geometry cell data as the
       fragment surfaces are generated.
   
   Computevolumeweightedaverageover
       For arrays selected a volume weighted average is
       computed. The values of these arrays are also copied into fragment
       geometry cell data as the fragment surfaces are
       generated.
   
   Input
       Input to the filter can be a hierarchical box data set
       containing image data or a multiblock of rectilinear
       grids.
   
   InvertVolumeFraction
       Inverting the volume fraction generates the negative of
       the material. It is useful for analyzing craters.
   
   MaterialFractionThreshold
       Material fraction is defined as normalized amount of
       material per voxel. Any voxel in the input data set with a material
       fraction greater than this value is included in the output data
       set.
   
   OutputBaseName
       This property specifies the base including path of where
       to write the statistics and geometry output text files. It follows the
       pattern "/path/to/folder/and/file" here file has no extension, as the
       filter will generate a unique extension.
   
   SelectMassArrays
       Mass arrays are paired with material fraction arrays.
       This means that the first selected material fraction array is paired
       with the first selected mass array, and so on sequentially. As the
       filter identifies voxels meeting the minimum material fraction
       threshold, these voxel's mass will be used in fragment center of mass
       and mass calculation. A warning is generated if no mass array is
       selected for an individual material fraction array. However, in that
       case the filter will run without issue because the statistics output
       can be generated using fragments' centers computed from axis aligned
       bounding boxes.
   
   SelectMaterialFractionArrays
       Material fraction is defined as normalized amount of
       material per voxel. It is expected that arrays containing material
       fraction data has been down converted to a unsigned
       char.
   
   WriteGeometryOutput
       If this property is set, then the geometry output is
       written to a text file. The file name will be constructed using the
       path in the "Output Base Name" widget.
   
   WriteStatisticsOutput
       If this property is set, then the statistics output is
       written to a text file. The file name will be constructed using the
       path in the "Output Base Name" widget.
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`