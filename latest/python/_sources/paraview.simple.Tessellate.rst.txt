paraview.simple.Tessellate
==========================

.. currentmodule:: paraview.simple

.. autofunction:: Tessellate

Data Descriptors
----------------


   
   ChordError
       This property controls the maximum chord error allowed
       at any edge midpoint in the output tessellation. The chord error is
       measured as the distance between the midpoint of any output edge and
       the original nonlinear geometry.
   
   FieldError
       This property controls the maximum field error allowed
       at any edge midpoint in the output tessellation. The field error is
       measured as the difference between a field value at the midpoint of an
       output edge and the value of the corresponding field in the original
       nonlinear geometry.
   
   Input
       This property specifies the input to the Tessellate
       filter.
   
   MaximumNumberofSubdivisions
       This property specifies the maximum number of times an
       edge may be subdivided. Increasing this number allows further
       refinement but can drastically increase the computational and storage
       requirements, especially when the value of the OutputDimension property
       is 3.
   
   MergePoints
       If the value of this property is set to 1, coincident
       vertices will be merged after tessellation has occurred. Only geometry
       is considered during the merge and the first vertex encountered is the
       one whose point attributes will be used. Any discontinuities in point
       fields will be lost. On the other hand, many operations, such as
       streamline generation, require coincident vertices to be merged. Toggle
       whether to merge coincident vertices.
   
   OutputDimension
       The value of this property sets the maximum
       dimensionality of the output tessellation. When the value of this
       property is 3, 3D cells produce tetrahedra, 2D cells produce triangles,
       and 1D cells produce line segments. When the value is 2, 3D cells will
       have their boundaries tessellated with triangles. When the value is 1,
       all cells except points produce line segments.
   
   ResetFieldCriteria
   
   

Data Descriptors inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   CellData
       Returns cell data information
   
   FieldData
       Returns field data information
   
   PointData
       Returns point data information
   
   

Data Descriptors inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   __dict__
       dictionary for instance variables (if defined)
   
   __weakref__
       list of weak references to the object (if defined)
   

Methods
-------


   
   Initialize = aInitialize(self, connection=None, update=True)
   
   

Methods inherited from SourceProxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   FileNameChanged(self)
       Called when the filename of a source proxy is changed.
   
   GetCellDataInformation(self)
       Returns the associated cell data information.
   
   GetDataInformation(self, idx=None)
       This method returns a DataInformation wrapper around a
       vtkPVDataInformation
   
   GetFieldDataInformation(self)
       Returns the associated cell data information.
   
   GetPointDataInformation(self)
       Returns the associated point data information.
   
   UpdatePipeline(self, time=None)
       This method updates the server-side VTK pipeline and the associated
       data information. Make sure to update a source to validate the output
       meta-data.
   
   UpdatePipelineInformation(self)
       This method updates the meta-data of the server-side VTK pipeline and
       the associated information properties
   
   __getitem__(self, idx)
       Given a slice, int or string, returns the corresponding
       output port
   
   

Methods inherited from Proxy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   
   GetProperty(self, name)
       Given a property name, returns the property object.
   
   GetPropertyValue(self, name)
       Returns a scalar for properties with 1 elements, the property
       itself for vectors.
   
   InitializeFromProxy(self, aProxy, update=True)
       Constructor. Assigns proxy to self.SMProxy, updates the server
       object as well as register the proxy in _pyproxies dictionary.
   
   ListProperties(self)
       Returns a list of all property names on this proxy.
   
   SetPropertyWithName(self, pname, arg)
       Generic method for setting the value of a property.
   
   __del__(self)
       Destructor. Cleans up all observers as well as remove
       the proxy from the _pyproxies dictionary
   
   __eq__(self, other)
       Returns true if the underlying SMProxies are the same.
   
   __getattr__(self, name)
       With the exception of a few overloaded methods,
       returns the SMProxy method
   
   __hash__(self)
       Return hash(self).
   
   __init__(self, \*\*args)
       Default constructor. It can be used to initialize properties
       by passing keyword arguments where the key is the name of the
       property. In addition registrationGroup and registrationName (optional)
       can be specified (as keyword arguments) to automatically register
       the proxy with the proxy manager.
   
   __iter__(self)
       Creates an iterator for the properties.
   
   __ne__(self, other)
       Returns false if the underlying SMProxies are the same.
   
   __setattr__(self, name, value)
       Implement setattr(self, name, value).
   
   add_attribute(self, name, value)
   
   



For the full list of servermanager proxies, please refer to :doc:`Available readers, sources, writers, filters and animation cues <paraview.servermanager_proxies>`